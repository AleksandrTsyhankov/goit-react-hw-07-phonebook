{"version":3,"sources":["phonebook/Filter/Filter.module.css","App.module.css","phonebook/Contacts/ContactStyles.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","api/phonebook-api.js","phonebook/Contacts/ContactForm.jsx","phonebook/Contacts/ContactList.jsx","phonebook/Filter/Filter.jsx","redux/phonebook/phonebook-operations.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","getFilter","state","phonebook","filter","getFilteredContacts","createSelector","items","contacts","normalizedFilter","toLowerCase","name","includes","fetchContacts","a","axios","get","data","defaults","baseURL","connect","dispatch","handleSubmit","contact","useState","setName","number","setNumber","handleChange","e","target","value","className","s","form","onSubmit","preventDefault","availableContact","find","alert","newContact","id","uuidv4","fetch","method","body","JSON","stringify","headers","label","inputName","type","pattern","title","required","onChange","inputTel","btn","deleteContactFromServer","contactsList","map","contactsListItem","onClick","delBtn","idF","htmlFor","filterInput","createAsyncThunk","_","rejectWithValue","pnonebookApi","response","App","useDispatch","useEffect","phonebookOperations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","action","payload","isLoading","pending","rejected","error","paylaod","combineReducers","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c57646b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__iJ0-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2S2-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactStyles_form__3odVC\",\"label\":\"ContactStyles_label__1kKU_\",\"inputName\":\"ContactStyles_inputName__3tonD\",\"inputTel\":\"ContactStyles_inputTel__1TawF\",\"btn\":\"ContactStyles_btn__3N0nL\",\"delBtn\":\"ContactStyles_delBtn__3o-Fd\",\"contactsList\":\"ContactStyles_contactsList__1itcZ\",\"contactsListItem\":\"ContactStyles_contactsListItem__2r7DC\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const filterContacts = createAction('contacts/filter');\r\n\r\n\r\n/*============================================*/\r\n/*pending*/\r\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\n/*success*/\r\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\n/*error*/\r\n// export const fetchContactsError = createAction('contacts/fetchContactsError');","import { createSelector } from \"reselect\";\r\n\r\nconst getContact = state => state.phonebook.items;\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getFilteredContacts = createSelector([getContact, getFilter], ((contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n})) \r\n\r\nexport {\r\n    getContact,\r\n    getFilter,\r\n    getFilteredContacts,\r\n};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n}\r\n\r\nexport const addContactToServer = (contact) => {\r\n    fetch('http://localhost:4040/contacts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(contact),\r\n        headers: { 'Content-type': 'application/json' },\r\n    });\r\n};\r\n\r\nexport const deleteContactFromServer = (id) => {\r\n    fetch(`http://localhost:4040/contacts/${id}`, {\r\n        method: 'delete',\r\n    });\r\n};","import React, { useState } from 'react';\r\nimport s from './ContactStyles.module.css';\r\nimport { connect } from 'react-redux'\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { addContactToServer } from 'api/phonebook-api';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nfunction ContactForm({ contacts, handleSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const clearState = () => {\r\n        setName('');\r\n        setNumber('');\r\n\r\n        return;\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n     const handleSubmitForm = e => {\r\n         e.preventDefault();\r\n\r\n         const availableContact = contacts.find(contact =>  contact.name.toLowerCase() === name.toLowerCase())\r\n\r\n            if (availableContact) {\r\n                alert(`${contacts.name} is already in contacts.`);\r\n                return;\r\n         };\r\n         \r\n         const newContact = {id: uuidv4(), name: name, number: number}\r\n         addContactToServer(newContact);\r\n        handleSubmit(newContact);\r\n        clearState();\r\n    }\r\n\r\n\r\nreturn ( \r\n<>\r\n            <form className={s.form} onSubmit={handleSubmitForm}>\r\n                <label className={s.label} >Name</label>\r\n                    <input\r\n                    className={s.inputName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    />\r\n\r\n                    <label className={s.label} >Number</label>\r\n                    <input\r\n                    className={s.inputTel}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={number}\r\n                />\r\n\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"submit\"\r\n                >\r\n                    Add contact\r\n                </button>\r\n                </form>\r\n</>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getFilteredContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleSubmit: contact => dispatch(addContact(contact))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport s from './ContactStyles.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\nimport { connect } from 'react-redux'\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { deleteContactFromServer } from 'api/phonebook-api';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n\r\n        return (\r\n            <>\r\n                <ul className={s.contactsList}>\r\n                    {contacts.map(contact => (\r\n                        <li\r\n                            key={contact.id}\r\n                            className={s.contactsListItem}\r\n                        > {contact.name}: {contact.number}\r\n\r\n                            <span\r\n                                onClick={() => deleteContact(contact.id)}\r\n                                className={s.delBtn}\r\n                            >-</span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n   contacts:  getFilteredContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteContact: function (id) { deleteContactFromServer(id); return dispatch(deleteContact(id)) },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux'\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nfunction Filter ({ onChange, value }) {\r\n    const idF = uuidv4();\r\n\r\n        return (\r\n            <>\r\n                <label\r\n                    htmlFor={idF}\r\n                    className={s.filter}\r\n                >Find contacts by name\r\n                </label>\r\n                <input\r\n                    id={idF}\r\n                    className={s.filterInput}\r\n                    type='text'\r\n                    name='filter'\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n             </>\r\n        );\r\n};\r\n    \r\nconst mapStateToProps = state => ({\r\n  contacts: getFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(filterContacts(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as pnonebookApi from '../../api/phonebook-api';\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//     dispatch(phonebookActions.fetchContactsRequest());\r\n\r\n//     try {\r\n//         const contacts = await pnonebookApi.fetchContacts();\r\n//         dispatch(phonebookActions.fetchContactsSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(phonebookActions.fetchContactsError(error));\r\n//     }\r\n    \r\n// };\r\n\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contacts/fetchContacts',\r\n    async (_, {rejectWithValue}) => {\r\n        try {\r\n            const contacts = await pnonebookApi.fetchContacts();\r\n            return contacts;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    },\r\n);","import { useEffect } from 'react';\nimport ContactForm from './phonebook/Contacts/ContactForm';\nimport ContactList from './phonebook/Contacts/ContactList';\nimport Filter from './phonebook/Filter/Filter';\nimport s from './App.module.css';\nimport { useDispatch } from 'react-redux';\nimport * as phonebookOperations from './redux/phonebook/phonebook-operations';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n        dispatch(phonebookOperations.fetchContacts())\n    }, [dispatch]);\n  \n  return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n        \n        <h2 className={s.title}>Contacts</h2>\n        <Filter/>\n        \n        <ContactList />\n      </>\n    )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './phonebook-actions';\r\nimport { fetchContacts } from './phonebook-operations';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.paylaod,\r\n    [fetchContacts.pending]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContacts]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    isLoading,\r\n    error,\r\n    filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        phonebook: phonebookReducer,\r\n},\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}